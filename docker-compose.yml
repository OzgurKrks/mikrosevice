version: "3.8"

services:
  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - USER_SERVICE_URL=http://user-service:3001
      - PRODUCT_SERVICE_URL=http://product-service:8080
      - ORDER_SERVICE_URL=http://order-service:3002
    depends_on:
      - user-service
      - product-service
      - order-service
    networks:
      - microservice-network

  # User Service (Node.js + TypeScript)
  user-service:
    build: ./user-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DB_HOST=user-db
      - DB_PORT=5432
      - DB_NAME=userdb
      - DB_USER=postgres
      - DB_PASSWORD=password
    depends_on:
      - user-db
    networks:
      - microservice-network

  # Product Service (Golang + Gin)
  product-service:
    build: ./product-service
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=product-db
      - DB_PORT=5432
      - DB_NAME=productdb
      - DB_USER=postgres
      - DB_PASSWORD=password
      - GIN_MODE=debug
    depends_on:
      - product-db
    networks:
      - microservice-network

  # Order Service (Node.js + TypeScript)
  order-service:
    build: ./order-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DB_HOST=order-db
      - DB_PORT=5432
      - DB_NAME=orderdb
      - DB_USER=postgres
      - DB_PASSWORD=password
      - USER_SERVICE_URL=http://user-service:3001
      - PRODUCT_SERVICE_URL=http://product-service:8080
    depends_on:
      - order-db
    networks:
      - microservice-network

  # PostgreSQL for User Service
  user-db:
    image: postgres:15
    environment:
      - POSTGRES_DB=userdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - user-db-data:/var/lib/postgresql/data
      - ./user-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - microservice-network

  # PostgreSQL for Product Service
  product-db:
    image: postgres:15
    environment:
      - POSTGRES_DB=productdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - product-db-data:/var/lib/postgresql/data
      - ./product-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    networks:
      - microservice-network

  # PostgreSQL for Order Service
  order-db:
    image: postgres:15
    environment:
      - POSTGRES_DB=orderdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - order-db-data:/var/lib/postgresql/data
      - ./order-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"
    networks:
      - microservice-network

volumes:
  user-db-data:
  product-db-data:
  order-db-data:

networks:
  microservice-network:
    driver: bridge
